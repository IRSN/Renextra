% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggplotRenouvTList.R
\name{autoplot.predict.RenouvTList}
\alias{autoplot.predict.RenouvTList}
\title{Generate a \code{ggplot} for a \code{predict.RenouvTList}
    Object}
\usage{
\method{autoplot}{predict.RenouvTList}(object, confInt = FALSE, facets, xlim = NULL, ...)
}
\arguments{
\item{object}{An object with class \code{"predict.RenouvTList"}.}

\item{confInt}{Logical. If \code{TRUE} the confidence intervals or
bands will be shown.}

\item{facets}{Logical. If \code{TRUE} a trellis graph is built,
with its facets corresponding to the thresholds. This option
is useful when the number of thresholds is moderate, say
\eqn{\leq 12}.}

\item{xlim}{An optional vector of limits for the horizontal
axis. This argument is actually passed as the `limits`
argument of \code{\link[ggplot2]{scale_x_log10}}
function. Note that the limits of the vertical axis can be set
in a standard way by using \code{+ ylim()}.}

\item{...}{Not used yet}
}
\value{
A \code{ggplot} object.
}
\description{
Generate a \code{ggplot} for a \code{predict.RenouvTList} object.
}
\details{
The plot shows the return level against the (log-) return period.
This plot is useful to assess the impact of the threshold choice
on the return level curve and on the corresponding confidence
intervals. However, the number of thresholds should be kept \eqn{\leq
12}.
}
\examples{
fit <- RenouvTList(Garonne,
                   threshold = seq(from = 2401, to = 3001, by = 100),
                   distname.y = "GPD")
autoplot(predict(fit))
\dontrun{
    library(mev)
    fit <- RenouvTList(nidd,
                       effDuration = 35,
                       threshold = seq(from = 65.08, to = 88.61, len = 40),
                       distname.y = "GPD")
     fitE <- RenouvTList(nidd,
                       effDuration = 35,
                       threshold = seq(from = 65.08, to = 88.61, len = 40),
                       start.par.y = c(scale = 30, shape = 0.0, kappa = 1.0),
                       distname.y = "EGPD3")
     autoplot(coSd(fitE, lambda = FALSE))
}
}
